Процесс и его потомки
На стандартном потоке ввода задается целое число N (N > 0). Требуется создать N процессов по следующей схеме: процесс-родитель 
создает первый процесс (процесс-сын), процесс-сын создает второй процесс свой сыновий процесс (процесс-внук), процесс-внук создает
третий процесс - своего сына (процесс-правнук) и так далее.

Процесс-родитель создает переменную pid, в которую записывает свой PID. Переменная pid создается в начале программы, до первого
fork(). Дальше каждый процесс потомок выводит в стандартный поток вывода 2 числа. Первое число getpid()-getppid(), второе число 
getpid()-pid. После этого выводится символ перевода строки.

Для вывода можно использовать средства высокого уровня. Вывод всегда происходит до порождения очередного процесса. Не забываем про 
сброс буфера. (функция fflush(stdout))

Кроме того каждый из процессов-потомков выводит в стандартный поток ошибок свой PID и PPID в следующем формате:
"PID = %d PPID =%d\n" и тоже не забываем про сброс буфера.

Процесс-родитель каждого из процессов должен завершаться после завершения работы своего потомка.

Input format
Целое положительное число N

Output format
В stdout вывод будет:

1 1
1 2
1 3
1 4
...
1 N
а в stderr будет:

"PID = %d PPID = %d\n"
"PID = %d PPID = %d\n"
...
"PID = %d PPID = %d\n"
